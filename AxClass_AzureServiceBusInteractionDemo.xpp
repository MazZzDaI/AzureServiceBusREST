/// <summary>
/// // Azure Service Bus demo
/// </summary>
/// Oleksandr Dudarenko, v1 12.07.2017
/// Oleksandr Dudarenko, v2 17.12.2019
class AzureServiceBusInteractionDemo
{
    /// <summary>
    /// Entry point
    /// </summary>
    public static void main(Args _args)
    {
        AzureServiceBusInteractionDemo app = new AzureServiceBusInteractionDemo();
        app.run();
    }

    public void run()
    {
        str AzureServiceNamespace = 'SodraD365';
        str AzureQueueName = 'sodrad365soutboundframeworkqueue';
        str AzureKeyName = 'managePolicy';
        str AzureKey = 'Y+K87yozNkiJMVUoYor8vFFnUOYant4JgK6EDAEU3sg=';
        int TimeOut = 60;

        AzureServiceBusHelper serviceBusHelper = AzureServiceBusHelper::construct(
            AzureServiceNamespace,
            AzureQueueName,
            AzureKeyName,
            AzureKey,
            TimeOut);

        //<Write>
        PizzaDataContract dataContract = new PizzaDataContract();
        dataContract.parmCustomerId('Cust 1');
        dataContract.parmDataAreaId('03se');
        dataContract.parmTotalAmount(100);

        serviceBusHelper.SendMessageToQ(dataContract);
        //</Write>

        //<Read>
        serviceBusHelper.ReadMessageFromQ(
            identifierStr(AzureServiceBusInteractionDemo),
            methodStr(AzureServiceBusInteractionDemo, callbackServiceBus),
            this,
            0);
        //</Read>
    }

    /// <summary>
    /// Callback method to process a message content from the queue
    /// </summary>
    /// <param name = "_content">Type: System.Net.Http.HttpContent</param>
    /// <param name = "_brokeredPropertyDC">Type: AzureServiceBusBrokeredPropertyDataContract</param>
    public void callbackServiceBus(System.Net.Http.HttpContent _content, AzureServiceBusBrokeredPropertyDataContract _brokeredPropertyDC)
    {
        str responseJson = _content.ReadAsStringAsync().Result;
  
        PizzaDataContract data;
        data = FormJsonSerializer::deserializeObject(classIdGet(data), responseJson);
        data.parmEventDateTime(_brokeredPropertyDC.convertEnqueuedTimeUtc());
        
        PizzaService::addItemToOrder(data);
    }

}